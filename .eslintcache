[{"E:\\Learning\\ReactJS - Techmaster\\20210106_todolist\\src\\index.js":"1","E:\\Learning\\ReactJS - Techmaster\\20210106_todolist\\src\\App.js":"2","E:\\Learning\\ReactJS - Techmaster\\20210106_todolist\\src\\reportWebVitals.js":"3","E:\\Learning\\ReactJS - Techmaster\\20210106_todolist\\src\\Components\\TaskList.js":"4","E:\\Learning\\ReactJS - Techmaster\\20210106_todolist\\src\\Components\\Header.js":"5","E:\\Learning\\ReactJS - Techmaster\\20210106_todolist\\src\\Components\\TaskItem.js":"6","E:\\Learning\\ReactJS - Techmaster\\20210106_todolist\\src\\TodoService.js":"7","E:\\Learning\\ReactJS - Techmaster\\20210106_todolist\\src\\components\\TaskList.js":"8","E:\\Learning\\ReactJS - Techmaster\\20210106_todolist\\src\\components\\CompleteTask.js":"9","E:\\Learning\\ReactJS - Techmaster\\20210106_todolist\\src\\components\\Header.js":"10","E:\\Learning\\ReactJS - Techmaster\\20210106_todolist\\src\\components\\TaskItem.js":"11"},{"size":500,"mtime":499162500000,"results":"12","hashOfConfig":"13"},{"size":3602,"mtime":1610613393504,"results":"14","hashOfConfig":"13"},{"size":362,"mtime":499162500000,"results":"15","hashOfConfig":"13"},{"size":1739,"mtime":1610610559588,"results":"16","hashOfConfig":"13"},{"size":628,"mtime":1610610713902,"results":"17","hashOfConfig":"13"},{"size":350,"mtime":1610018268913,"results":"18","hashOfConfig":"13"},{"size":454,"mtime":1610614182621,"results":"19","hashOfConfig":"13"},{"size":741,"mtime":1610611173988,"results":"20","hashOfConfig":"13"},{"size":578,"mtime":1610611015956,"results":"21","hashOfConfig":"13"},{"size":628,"mtime":1610610713902,"results":"22","hashOfConfig":"13"},{"size":1021,"mtime":1610611657048,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"wgh9mn",{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"26"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"32","messages":"33","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"35"},{"filePath":"36","messages":"37","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"35"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"26"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"E:\\Learning\\ReactJS - Techmaster\\20210106_todolist\\src\\index.js",[],["52","53"],"E:\\Learning\\ReactJS - Techmaster\\20210106_todolist\\src\\App.js",["54"],"import { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport CompleteTask from \"./components/CompleteTask\";\nimport Header from \"./components/Header\";\nimport TaskList from \"./components/TaskList\";\nimport uuid from \"react-uuid\";\nimport { GetToDoDetail, GetToDoList } from \"./TodoService\";\n\nfunction App() {\n  let [isLoading, setIsLoading] = useState(true);\n  let [isError, setIsError] = useState(false);\n  let [reloadCount, setReloadCount] = useState(0);\n  let [taskList, setTaskList] = useState([]);\n  let [newTask, setNewTask] = useState(\"\");\n\n  useEffect(async () => {\n    try {\n      const response = await GetToDoList();\n      const detailReponse = await GetToDoDetail(response.data[0].id);\n      setTaskList([detailReponse.data]);\n    } catch (ex) {\n      console.log(ex);\n      setIsError(true);\n    } finally {\n      setIsLoading(false);\n    }\n  }, [reloadCount]);\n\n  const getCompletedTaskList = () => {\n    return taskList\n      .filter((task) => {\n        return task.completed;\n      })\n      .sort((t1, t2) => {\n        return t1.completedDate - t2.completedDate;\n      });\n  };\n\n  const getIncompletedTaskList = () => {\n    return taskList\n      .filter((task) => {\n        return !task.completed;\n      }).sort((t1, t2) => {\n        return t1.createdDate - t2.createdDate;\n      })\n      .sort((t1, t2) => {\n        if (t1.isFavorited && !t2.isFavorited) return -1;\n        if (!t1.isFavorited && t2.isFavorited) return 1;\n        return 0;\n      });\n  };\n\n  const onAddTaskClick = () => {\n    if (!newTask) return;\n    let newTaskList = [\n      ...taskList,\n      {\n        id: uuid(),\n        completed: false,\n        isFavorited: false,\n        title: newTask,\n        createdDate: new Date().getTime(),\n        completedDate: new Date(1900, 1, 1),\n      },\n    ];\n    setTaskList(newTaskList);\n    setNewTask(\"\");\n  };\n\n  const onCompletedChange = (id, completed) => {\n    let newTaskList = taskList.map((task) => {\n      if (task.id === id) {\n        let newTask = {\n          ...task,\n          completed: completed,\n          completedDate: completed\n            ? new Date().getTime()\n            : new Date(1900, 1, 1),\n        };\n        return newTask;\n      }\n      return task;\n    });\n    setTaskList(newTaskList);\n  };\n\n  const onFavoritedChange = (id, isFavorited) => {\n    console.log(isFavorited);\n    let newTaskList = taskList.map((task) => {\n      if (task.id === id) {\n        let newTask = {\n          ...task,\n          isFavorited: isFavorited,\n        };\n        return newTask;\n      }\n      return task;\n    });\n    setTaskList(newTaskList);\n  };\n\n  const renderErrorContent = () => {\n    return (\n      <div>\n        \"Loi roi\"\n        <button\n          onClick={() => {\n            setIsLoading(true);\n            setIsError(false);\n            setReloadCount(reloadCount + 1);\n          }}\n        >\n          Tải lại\n        </button>\n      </div>\n    );\n  };\n\n  const renderContent = () => {\n    return isLoading ? (\n      \"Loading\"\n    ) : (\n      <div>\n        <Header\n          onAddTaskClick={onAddTaskClick}\n          newTask={newTask}\n          setNewTask={setNewTask}\n        />\n        <TaskList\n          taskList={getIncompletedTaskList()}\n          onCompletedChange={onCompletedChange}\n          onFavoritedChange={onFavoritedChange}\n        />\n        <CompleteTask\n          taskList={getCompletedTaskList()}\n          onCompletedChange={onCompletedChange}\n        />\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"App\">\n      {isError ? renderErrorContent() : renderContent()}\n    </div>\n  );\n}\n\nexport default App;\n","E:\\Learning\\ReactJS - Techmaster\\20210106_todolist\\src\\reportWebVitals.js",[],"E:\\Learning\\ReactJS - Techmaster\\20210106_todolist\\src\\Components\\TaskList.js",["55"],"import classes from \"./TaskList.module.css\";\r\nimport React from \"react\";\r\nimport TaskItem from \"./TaskItem\";\r\n\r\n<<<<<<< HEAD\r\nfunction TaskList({ taskList, onCompletedChange, onFavoritedChange }) {\r\n  return (\r\n    <section className=\"listTask\">\r\n      <div className=\"totalComplete\">\r\n        <span> Incompleted</span>\r\n        <span> {taskList.length}</span>\r\n      </div>\r\n      <ul>\r\n        {taskList.map((task) => {\r\n          return (\r\n            <li>\r\n              <TaskItem\r\n                task={task}\r\n                onCompletedChange={onCompletedChange}\r\n                onFavoritedChange={onFavoritedChange}\r\n              />\r\n=======\r\nimport { StarOutlined } from \"@ant-design/icons\";\r\n\r\nfunction TaskList({\r\n  incompleteItems,\r\n  maskTaskCompleted,\r\n  onHandleFavorite,\r\n  selected,\r\n}) {\r\n  return (\r\n    <section className={classes.listTask}>\r\n      <ul>\r\n        {incompleteItems.map((task) => {\r\n          return (\r\n            <li key={task.id}>\r\n              <div className={classes.wrapItem}>\r\n                <div className={classes.wrap}>\r\n                  <input\r\n                    name={task.item}\r\n                    type=\"checkbox\"\r\n                    onClick={() => maskTaskCompleted(task.id)}\r\n                  />\r\n                  <label>{task.item}</label>\r\n                </div>\r\n                <StarOutlined\r\n                  onClick={() => onHandleFavorite(task.id)}\r\n                  style={{\r\n                    color: selected.id === task.id ? \"red\" : null,\r\n                  }}\r\n                />\r\n              </div>\r\n>>>>>>> da088e7cf42db2f992a8e7e7df1f43dd88e4ce6c\r\n            </li>\r\n          );\r\n        })}\r\n      </ul>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default TaskList;\r\n",["56","57"],"E:\\Learning\\ReactJS - Techmaster\\20210106_todolist\\src\\Components\\Header.js",["58"],"import React from \"react\";\r\nimport classes from \"./Header.module.css\";\r\nimport { Button } from \"antd\";\r\n\r\n<<<<<<< HEAD\r\nfunction Header({ onAddTaskClick, newTask, setNewTask }) {\r\n  return (\r\n    <header className={classes.heading}>\r\n      <h1>Tasks</h1>\r\n      <div className={classes.addTask}>\r\n        <input\r\n          type=\"text\"\r\n          value={newTask}\r\n          onChange={(e) => setNewTask(e.target.value)}\r\n          placeholder=\"Add a task\"\r\n        />\r\n        <Button Type=\"primary\" Shape=\"round\" onClick={onAddTaskClick}>\r\n          Add task\r\n        </Button>\r\n      </div>\r\n=======\r\nfunction Header({ onHandleChange, onHandeEnter, currentItem }) {\r\n  return (\r\n    <header className={classes.heading}>\r\n      <h1>Tasks</h1>\r\n      <input\r\n        type=\"text\"\r\n        value={currentItem}\r\n        placeholder=\"Add a task\"\r\n        onChange={(e) => onHandleChange(e.target.value)}\r\n        onKeyDown={(event) => onHandeEnter(event)}\r\n      />\r\n>>>>>>> da088e7cf42db2f992a8e7e7df1f43dd88e4ce6c\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","E:\\Learning\\ReactJS - Techmaster\\20210106_todolist\\src\\Components\\TaskItem.js",[],"E:\\Learning\\ReactJS - Techmaster\\20210106_todolist\\src\\TodoService.js",[],"E:\\Learning\\ReactJS - Techmaster\\20210106_todolist\\src\\components\\TaskList.js",["59"],"import classes from \"./TaskList.module.css\";\r\nimport React from \"react\";\r\nimport TaskItem from \"./TaskItem\";\r\n\r\nfunction TaskList({ taskList, onCompletedChange, onFavoritedChange }) {\r\n  return (\r\n    <section className=\"listTask\">\r\n      <div className=\"totalComplete\">\r\n        <span> Incompleted</span>\r\n        <span> {taskList.length}</span>\r\n      </div>\r\n      <ul>\r\n        {taskList.map((task) => {\r\n          return (\r\n            <li>\r\n              <TaskItem\r\n                task={task}\r\n                onCompletedChange={onCompletedChange}\r\n                onFavoritedChange={onFavoritedChange}\r\n              />\r\n            </li>\r\n          );\r\n        })}\r\n      </ul>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default TaskList;\r\n","E:\\Learning\\ReactJS - Techmaster\\20210106_todolist\\src\\components\\CompleteTask.js",[],"E:\\Learning\\ReactJS - Techmaster\\20210106_todolist\\src\\components\\Header.js",[],"E:\\Learning\\ReactJS - Techmaster\\20210106_todolist\\src\\components\\TaskItem.js",[],{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","severity":1,"message":"65","line":16,"column":13,"nodeType":"66","endLine":27,"endColumn":4},{"ruleId":null,"fatal":true,"severity":2,"message":"67","line":5,"column":2},{"ruleId":"60","replacedBy":"68"},{"ruleId":"62","replacedBy":"69"},{"ruleId":null,"fatal":true,"severity":2,"message":"70","line":5,"column":2},{"ruleId":"71","severity":1,"message":"72","line":1,"column":8,"nodeType":"73","messageId":"74","endLine":1,"endColumn":15},"no-native-reassign",["75"],"no-negated-in-lhs",["76"],"react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","Parsing error: Unexpected token\n\n\u001b[0m \u001b[90m 3 | \u001b[39m\u001b[36mimport\u001b[39m \u001b[33mTaskItem\u001b[39m from \u001b[32m\"./TaskItem\"\u001b[39m\u001b[33m;\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 4 | \u001b[39m\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 5 | \u001b[39m\u001b[33m<<\u001b[39m\u001b[33m<<\u001b[39m\u001b[33m<<\u001b[39m\u001b[33m<\u001b[39m \u001b[33mHEAD\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m   | \u001b[39m \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 6 | \u001b[39m\u001b[36mfunction\u001b[39m \u001b[33mTaskList\u001b[39m({ taskList\u001b[33m,\u001b[39m onCompletedChange\u001b[33m,\u001b[39m onFavoritedChange }) {\u001b[0m\n\u001b[0m \u001b[90m 7 | \u001b[39m  \u001b[36mreturn\u001b[39m (\u001b[0m\n\u001b[0m \u001b[90m 8 | \u001b[39m    \u001b[33m<\u001b[39m\u001b[33msection\u001b[39m className\u001b[33m=\u001b[39m\u001b[32m\"listTask\"\u001b[39m\u001b[33m>\u001b[39m\u001b[0m",["75"],["76"],"Parsing error: Unexpected token\n\n\u001b[0m \u001b[90m 3 | \u001b[39m\u001b[36mimport\u001b[39m { \u001b[33mButton\u001b[39m } from \u001b[32m\"antd\"\u001b[39m\u001b[33m;\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 4 | \u001b[39m\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 5 | \u001b[39m\u001b[33m<<\u001b[39m\u001b[33m<<\u001b[39m\u001b[33m<<\u001b[39m\u001b[33m<\u001b[39m \u001b[33mHEAD\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m   | \u001b[39m \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 6 | \u001b[39m\u001b[36mfunction\u001b[39m \u001b[33mHeader\u001b[39m({ onAddTaskClick\u001b[33m,\u001b[39m newTask\u001b[33m,\u001b[39m setNewTask }) {\u001b[0m\n\u001b[0m \u001b[90m 7 | \u001b[39m  \u001b[36mreturn\u001b[39m (\u001b[0m\n\u001b[0m \u001b[90m 8 | \u001b[39m    \u001b[33m<\u001b[39m\u001b[33mheader\u001b[39m className\u001b[33m=\u001b[39m{classes\u001b[33m.\u001b[39mheading}\u001b[33m>\u001b[39m\u001b[0m","no-unused-vars","'classes' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]